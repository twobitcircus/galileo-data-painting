{
  "name": "mraa",
  "description": "IO library that helps you use I2c, SPI, gpio, uart, pwm, analog inputs (aio) and more on a number of platforms such as the Intel galileo, the Intel edison and others",
  "keywords": [
    "gpio",
    "edison",
    "galileo",
    "io",
    "mraajs",
    "spi",
    "i2c",
    "minnow",
    "intel"
  ],
  "homepage": "http://github.com/intel-iot-devkit/mraa",
  "main": "./build/Release/mraa.node",
  "engines": {
    "node": ">= 0.10.x"
  },
  "bugs": {
    "url": "http://github.com/intel-iot-devkit/mraa/issues"
  },
  "license": "MIT",
  "version": "0.6.1-14-g0dd0395",
  "authors": "See github.com/intel-iot-devkit/mraa/graphs/contributors",
  "scripts": {
    "install": "node-gyp rebuild"
  },
  "gypfile": true,
  "readme": "libmraa - Low Level Skeleton Library for Communication on GNU/Linux platforms\n==============\n\nLibmraa is a C/C++ library with bindings to javascript & python to interface\nwith the IO on Galileo, Edison & other platforms, with a structured and sane\nAPI where port names/numbering matches the board that you are on. Use of\nlibmraa does not tie you to specific hardware with board detection done at\nruntime you can create portable code that will work across the supported\nplatforms.\n\nThe intent is to make it easier for developers and sensor manufacturers to map\ntheir sensors & actuators on top of supported hardware and to allow control of\nlow level communication protocol by high level languages & constructs.\n\nSupported Boards\n================\n\nX86\n---\n* [Galileo Gen 1 - Rev D](../master/docs/galileorevd.md)\n* [Galileo Gen 2 - Rev H](../master/docs/galileorevh.md)\n* [Edison](../master/docs/edison.md)\n* [Intel DE3815](../master/docs/intel_de3815.md)\n* [Minnowboard Max](../master/docs/minnow_max.md)\n\nARM\n---\n* [Raspberry Pi](../master/docs/raspberry_pi.md)\n\nInstalling on your board\n========\n\nSee the section below on compiling or use our repository to install on an\neglibc based yocto poky image that supports opkg. Adding this repository is as\nsimple as and you'll have the latest stable tagged build of mraa installed!\n\n``` bash\necho \"src mraa-upm http://iotdk.intel.com/repos/1.1/intelgalactic\" > /etc/opkg/mraa-upm.conf\nopkg update\nopkg install libmraa0\n```\n\nIf you would like to get the latest & greatest builds from master HEAD you can\nuse our -dev repository\n\n```bash\necho \"src mraa-upm http://iotdk.intel.com/repos/1.1/intelgalactic-dev\" > /etc/opkg/mraa-upm.conf\nopkg update\nopkg install libmraa0\n```\n\nYou can also install just the node.js mraa module by using npm. You will need a\nC++ compiler and the node development headers, however it's not required to\nhave SWIG installed.\n\n```bash\nnpm install mraa\n```\n\nCompiling\n=========\n\nSee documentation on [building](../master/docs/building.md)\n\nExamples\n========\n\nSee the [examples](../../tree/master/examples) available for various languages\n\nDebugging\n=========\n\nSometimes it just doesn't want to work, let us try and help you, you can file\nissues in github or join us in #mraa on freenode IRC, hang around for a little\nwhile because we're not necessarily on 24/7, but we'll get back to you! Have a\nglance at our [debugging](../master/docs/debugging.md) page too.\n\nC/C++ API Documentation\n===========\n\nThe C/C++ documentation is available [here](http://iotdk.intel.com/docs/master/mraa/)\n\nPython API Documentation\n===========\n\nThe Python documentation is available [here](http://iotdk.intel.com/docs/master/mraa/python)\n\nNodeJS API documentation\n===========\n\nThere is no explicit nodejs API documentation, see the examples. The API itself\nis very similar to the python one but with a js syntax. If you know of an\nautodoc tool for generating nodejs APIs from a native C++ nodejs extension\nplease get in touch!\n",
  "readmeFilename": "README.md",
  "_id": "mraa@0.6.1-14-g0dd0395",
  "_shasum": "17e02dca6541c702f9f8f4c766bd5536a610d4d5",
  "_from": "mraa@",
  "_resolved": "https://registry.npmjs.org/mraa/-/mraa-0.6.1-14-g0dd0395.tgz"
}
